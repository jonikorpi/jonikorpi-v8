<!DOCTYPE html>
<html>
  <head>
    <meta charset='utf-8' />
    <title>
      Joni Korpi
    </title>
    <meta content='width=device-width, initial-scale=1.0' name='viewport' />
    <link href="/stylesheets/main.css?1359145051" media="screen" rel="stylesheet" type="text/css" />
    <script src="/javascripts/main.js?1359145051" type="text/javascript"></script>
    <script src='//use.typekit.net/tdk6ecz.js'></script>
    <script type='text/javascript'>
      //<![CDATA[
        try{Typekit.load();}catch(e){}
      //]]>
    </script>
    <link href='/images/avatar-144.png' rel='shortcut icon' />
    <link href='/images/avatar-144.png' rel='apple-touch-icon' />
  </head>
  <body>
  <div class='old-post'>
    <small class='date'>
      Posted on
      Jul 17 2011
      by
      <a href='/'>Joni Korpi</a>
    </small>
    <h1>
      Leaving Old Internet Explorer Behind
    </h1>
    <p class='intro'>
      Using media queries to make a clean break from legacy browsers.
    </p>
    <p>This site was designed <a href="http://www.lukew.com/ff/entry.asp?933">Mobile First</a>. The styles that make up the mobile version of its layout, which I’ll call the Narrow Layout from now on, are not inside a media query, while the styles that make up the wider versions are. As a result, browsers with no support for media queries will only see the Narrow Layout. This is a good thing.</p>

<p>Instead of enabling media queries in the browsers that don’t support them, like Internet Explorer 6–8, I chose to simply serve them the Narrow Layout, slightly enhanced with Paul Irish’s <a href="http://paulirish.com/2008/conditional-stylesheets-vs-css-hacks-answer-neither/">IE conditional classes</a>. </p>

<p>For example, I gave the layout a static width to make sure the content never stretches uncomfortably wide, and made sure images always display at full size, since I had halved their maximum sizes in the Narrow Layout.</p>

<pre><code>body {
	width: auto;
}
	.ie body {width: 540px;}

#content figure {
	width: 240px;
	max-width: 100%;
}
	.ie #content figure {width: 480px;}
</code></pre>

<p>As a result, old mobile browsers will see a fluid single-column layout, and IE6–8 will see a similar static-width layout, perfectly comfortable for reading even on larger screens.</p>

<figure>
	<img src="/images/leaving-old-IE-behind.jpg" alt="This site in IE7" />
	<figcaption>This is roughly what this site looks like in IE7.</figcaption>
</figure>

<p>So that’s old IE and old mobile browsers taken care of. Now comes the fun part. Since I can be sure that legacy browsers won’t be seeing any of the wider versions of my layout, I’m free to design them with the assumption that they’ll be viewed in a browser that supports such <a href="http://caniuse.com/#eras=now,near,far&amp;cats=CSS">luxuries</a> as…</p>

<ul>
  <li>2D transforms</li>
  <li>CSS2.1 selectors: <code>+ &gt; [attr]</code></li>
  <li>most <a href="http://www.quirksmode.org/css/contents.html#CSS3">CSS3 selectors</a></li>
  <li><code>:before</code> and <code>:after</code></li>
  <li><code>opacity</code>, <code>box-shadow</code>, and <code>text-shadow</code> </li>
  <li><code>min/max-width</code> and <code>min/max-height</code></li>
  <li><code>box-sizing</code> and <code>inline-block</code></li>
  <li><code>rgba()</code> and <code>hsla()</code></li>
  <li>and even root-ems!</li>
</ul>

<p>Suddenly all the shackles imposed by old IE are gone. <em>I can even use margins on floated elements.</em> I’ll just let that sink in for a moment.</p>

<p>I think I’ll be using this technique to deal with legacy browsers from now on. It requires no Javascript, no hacks, no separate stylesheets, and barely any effort, since single-column layouts rarely require the kind of advanced positioning that IE6 will have problems with. In this site’s case, I had to write less than a dozen lines of CSS to make the Narrow Layout comfortable to view in old IE. Simple, effortless, and oh so liberating.</p>
  </div>
</body>
</html>


